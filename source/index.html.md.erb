---
title: API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - shell
  - python
  - java

toc_footers:
  - <a href='https://access.beachfront.io/'>Sign up for Developer Keys</a>

includes:
  - errors

search: true

code_clipboard: true
---

# Introduction

Welcome to Beachfront Reporting API Documentation!

# Authentication

Beachfront uses Basic Auth Token(BAT) to allow access to the Reporting API.

1. Get your API key and secret [here](https://access.beachfront.io/).
2. You can generate BAT using API key and secret [here](https://www.blitter.se/utils/basic-authentication-header-generator).
3. For API requests, please include BAT in the header like: `Authorization: Basic meowmeow`

<aside class="notice">
You must replace <code>meowmeow</code> with your basic authentication token.
</aside>

# Reporting API

## Summarized Data

```shell
printf '{
	"range": "month2date",
	"startDate": "2021-01-01T21:28:55.187Z",
	"endDate": "2021-06-01T21:28:55.187Z",
	"dimensions": [
		"day",
		"clvDeal"
	],
	"measures": [
		"revenuegross",
		"resellerRevenue",
		"impressions",
		"adrequests",
		"totalBidPlaced"
	],
	"conditions": [{
		"dimension": "clvDeal",
		"operation": "in",
		"value": [
			  "150079cd912",
        "150079cd918",
			  "16266a96c01",
			  "16266a96c04"
		]
	}]
}'| http  --follow --timeout 3600 POST 'https://access.beachfront.io/api/reportingapi/summary' \
 Authorization:'Basic meowmeow' \
 Content-Type:'application/json'
```

```python
import requests
import json

url = "https://access.beachfront.io/api/reportingapi/summary"

payload = json.dumps({
  "range": "month2date",
  "startDate": "2021-01-01T21:28:55.187Z",
  "endDate": "2021-06-01T21:28:55.187Z",
  "dimensions": [
    "day",
    "clvDeal"
  ],
  "measures": [
    "revenuegross",
    "resellerRevenue",
    "impressions",
    "adrequests",
    "totalBidPlaced"
  ],
  "conditions": [
    {
      "dimension": "clvDeal",
      "operation": "in",
      "value": [
        "150079cd912",
			  "150079cd918",
			  "16266a96c01",
			  "16266a96c04"
      ]
    }
  ]
})
headers = {
  'Authorization': 'Basic meowmeow',
  'Content-Type': 'application/json'
}

response = requests.request("POST", url, headers=headers, data=payload)

print(response.text)
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n\t\"range\": \"month2date\",\n\t\"startDate\": \"2021-01-01T21:28:55.187Z\",\n\t\"endDate\": \"2021-06-01T21:28:55.187Z\",\n\t\"dimensions\": [\n\t\t\"day\",\n\t\t\"clvDeal\"\n\t],\n\t\"measures\": [\n\t\t\"revenuegross\",\n\t\t\"resellerRevenue\",\n\t\t\"impressions\",\n\t\t\"adrequests\",\n\t\t\"totalBidPlaced\"\n\t],\n\t\"conditions\": [{\n\t\t\"dimension\": \"clvDeal\",\n\t\t\"operation\": \"in\",\n\t\t\"value\": [\n\t\t\t\"150079cd912\",\n\t\t\t\"150079cd918\",\n\t\t\t\"16266a96c01\",\n\t\t\t\"16266a96c04\"\n\t\t]\n\t}]\n}");
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/reportingapi/summary")
  .method("POST", body)
  .addHeader("Authorization", "Basic meowmeow")
  .addHeader("Content-Type", "application/json")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
[
    "Summary",
    343.85626,
    103.21045,
    21365,
    2241379477,
    207505
]
```

This endpoint retrieves summary data in the format - "Summary, first measure data, second measure data and so on"

### HTTP Request

`POST https://access.beachfront.io/api/reportingapi/summary`

### Body Parameters

Parameter |  Description | Example
--------- | ------------ | -------
range | One of today, yesterday, last7day, last14day, last30day, month2date, lastmonth, custom, last15day. | month2date
startDate | Starting date | 2021-01-01T21:28:55.187Z
endDate | Ending date | 2021-06-01T21:28:55.187Z
dimensions | List of dimensions | [ "day", "clvDeal" ]
measures | List of measures | ["revenuegross","resellerRevenue","impressions","adrequests","totalBidPlaced"]
conditions | Filters | [{ "dimension": "clvDeal", "operation": "in", "value": [ "150079cd912", "150079cd918", "16266a96c01", "16266a96c04" ] }]

<!--aside class="success">
Remember â€” a happy kitten is an authenticated kitten!
</aside-->

## Detailed Data

```shell
printf '{
	"range": "month2date",
	"startDate": "2021-01-01T21:28:55.187Z",
	"endDate": "2021-06-01T21:28:55.187Z",
	"dimensions": [
		"day",
		"clvDeal"
	],
	"measures": [
		"revenuegross",
		"resellerRevenue",
		"impressions",
		"adrequests",
		"totalBidPlaced"
	],
	"conditions": [{
		"dimension": "clvDeal",
		"operation": "in",
		"value": [
			"150079cd912",
			"150079cd918",
			"16266a96c01",
			"16266a96c04"
		]
	}]
}'| http  --follow --timeout 3600 POST 'https://access.beachfront.io/api/reportingapi/detail' \
 Authorization:'Basic meowmeow' \
 Content-Type:'application/json'
```

```python
import http.client
import json

conn = http.client.HTTPSConnection("localhost", 8085)
payload = json.dumps({
  "range": "month2date",
  "startDate": "2021-01-01T21:28:55.187Z",
  "endDate": "2021-06-01T21:28:55.187Z",
  "dimensions": [
    "day",
    "clvDeal"
  ],
  "measures": [
    "revenuegross",
    "resellerRevenue",
    "impressions",
    "adrequests",
    "totalBidPlaced"
  ],
  "conditions": [
    {
      "dimension": "clvDeal",
      "operation": "in",
      "value": [
        "150079cd912",
			  "150079cd918",
			  "16266a96c01",
			  "16266a96c04"
      ]
    }
  ]
})
headers = {
  'Authorization': 'Basic meowmeow',
  'Content-Type': 'application/json'
}
conn.request("POST", "/api/reportingapi/detail", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n\t\"range\": \"month2date\",\n\t\"startDate\": \"2021-01-01T21:28:55.187Z\",\n\t\"endDate\": \"2021-06-01T21:28:55.187Z\",\n\t\"dimensions\": [\n\t\t\"day\",\n\t\t\"clvDeal\"\n\t],\n\t\"measures\": [\n\t\t\"revenuegross\",\n\t\t\"resellerRevenue\",\n\t\t\"impressions\",\n\t\t\"adrequests\",\n\t\t\"totalBidPlaced\"\n\t],\n\t\"conditions\": [{\n\t\t\"dimension\": \"clvDeal\",\n\t\t\"operation\": \"in\",\n\t\t\"value\": [\n\t\t\t\"150079cd912\",\n\t\t\t\"150079cd918\",\n\t\t\t\"16266a96c01\",\n\t\t\t\"16266a96c04\"\n\t\t]\n\t}]\n}");
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/reportingapi/detail")
  .method("POST", body)
  .addHeader("Authorization", "Basic meowmeow")
  .addHeader("Content-Type", "application/json")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
{
    "msg": null,
    "success": true,
    "value": null,
    "rc": 28,
    "title": null,
    "columns": [
        {
            "key": "day",
            "title": "DAY",
            "type": "DATE",
            "prefix": null,
            "suffix": null
        },
        {
            "key": "clvDeal",
            "title": "DEAL",
            "type": "STRING",
            "prefix": null,
            "suffix": null
        },
        {
            "key": "revenuegross",
            "title": "SPEND",
            "type": "DOUBLE",
            "prefix": "$",
            "suffix": null
        },
        {
            "key": "resellerRevenue",
            "title": "REVENUE",
            "type": "DOUBLE",
            "prefix": "$",
            "suffix": null
        },
        {
            "key": "impressions",
            "title": "IMPRESSIONS",
            "type": "NUMBER",
            "prefix": null,
            "suffix": null
        },
        {
            "key": "adrequests",
            "title": "AUCTIONS",
            "type": "NUMBER",
            "prefix": null,
            "suffix": null
        },
        {
            "key": "totalBidPlaced",
            "title": "BID PLACED",
            "type": "NUMBER",
            "prefix": null,
            "suffix": null
        }
    ],
    "rows": [
        [
            "2-Jun-2021",
            "DealNameOne",
            30.640728,
            9.192219,
            1808,
            41630132,
            21467
        ],
        [
            "2-Jun-2021",
            "DealNameTwo",
            20.866302,
            6.2598915,
            1232,
            15295795,
            15558
        ]
    ]
}
```

This endpoint retrieves detailed data.

<!--
<aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
-->

### HTTP Request

`POST https://access.beachfront.io/api/reportingapi/detail`

### Body Parameters

Parameter |  Description | Example
--------- | ------------ | -------
range | One of today, yesterday, last7day, last14day, last30day, month2date, lastmonth, custom, last15day. | month2date
startDate | Starting date | 2021-01-01T21:28:55.187Z
endDate | Ending date | 2021-06-01T21:28:55.187Z
dimensions | List of dimensions | [ "day", "clvDeal" ]
measures | List of measures | ["revenuegross","resellerRevenue","impressions","adrequests","totalBidPlaced"]
conditions | Filters | [{ "dimension": "clvDeal", "operation": "in", "value": [ "150079cd912", "150079cd918", "16266a96c01", "16266a96c04" ] }]

# Media Plan API

## Get media plan by id

```shell
http  --follow --timeout 3600 GET 'https://access.beachfront.io/api/mediaplanapi/get/60ad0b6e92f8713502143509' \
 Authorization:'Basic meowmeow'
```

```python
import requests

url = "https://access.beachfront.io/api/mediaplanapi/get/60ad0b6e92f8713502143509"

payload = ""
headers = {
  'Authorization': 'Basic meowmeow'
}

response = requests.request("GET", url, headers=headers, data=payload)

print(response.text)
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/mediaplanapi/get/60ad0b6e92f8713502143509")
  .method("GET", null)
  .addHeader("Authorization", "Basic meowmeow")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
{
    "id": "60ad0b6e92f8713502143509",
    "title": "Base Ball Audience",
    "status": true,
    "includeSegments": [
        {
            "id": "3830",
            "type": "RDS",
            "title": "BASE_BALL_A273-31",
            "source": 0,
            "price": null,
            "provider": "Sample Provider",
            "users": 5431221812
        }
    ],
    "excludeSegments": [],
    "platform": [
        "CTV"
    ],
    "country": [
        {
            "key": "US",
            "name": "United States of America",
            "avl": false,
            "dmaCode": null
        }
    ],
    "app": [],
    "state": [],
    "dma": [],
    "zipcode": [],
    "publishers": [],
    "domains": [],
    "applications": [],
    "category": [],
    "genres": [],
    "iabCategory": [],
    "domainMedia": null,
    "bundleMedia": null,
    "zipMedia": null,
    "mediaType": "video",
    "cpm": 0.0,
    "pdf": true,
    "desc": null,
    "featured": false,
    "icon": null,
    "excludeCountry": false,
    "excludeDma": false,
    "excludeState": false,
    "excludeUserId": false,
    "excludeiabCat": false,
    "excludeGenres": false,
    "excludeApp": false
}
```

This endpoint retrieves media plan data.

<!--
<aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
-->

### HTTP Request

`GET https://access.beachfront.io/api/mediaplanapi/get/60ad0b6e92f8713502143509`

### Query Parameters

Parameter |  Description
--------- | -----------
id | media plan id

## Get all media plans

```shell
printf '{
    "pagination": {
        "number": 50,
        "numberOfPages": 0
    }
}'| http  --follow --timeout 3600 POST 'https://access.beachfront.io/api/mediaplanapi/all' \
 Authorization:'Basic meowmeow' \
 Content-Type:'application/json'
```

```python
import requests
import json

url = "https://access.beachfront.io/api/mediaplanapi/all"

payload = json.dumps({
  "pagination": {
    "number": 50,
    "numberOfPages": 0
  }
})
headers = {
  'Authorization': 'Basic meowmeow',
  'Content-Type': 'application/json'
}

response = requests.request("POST", url, headers=headers, data=payload)

print(response.text)
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n    \"pagination\": {\n        \"number\": 50,\n        \"numberOfPages\": 0\n    }\n}");
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/mediaplanapi/all")
  .method("POST", body)
  .addHeader("Authorization", "Basic meowmeow")
  .addHeader("Content-Type", "application/json")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
{
    "columns": [
        "Name",
        "Deals Attached",
        "Status",
        "Created",
        "Updated"
    ],
    "rows": [
        {
            "name": "Multi Culture Audience",
            "dealsAttached": 1,
            "status": "ENABLED",
            "created": 1621953390246,
            "updated": 1622053211858
        },
        {
            "name": "...",
            "dealsAttached": 1,
            "status": "ENABLED",
            "created": 1621953335033,
            "updated": null
        }
    ]
}
```

This endpoint retrieves all media plans.

<!--
<aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
-->

### HTTP Request

`POST https://access.beachfront.io/api/mediaplanapi/all`

### Body Parameters

Parameter  | Description                            | Example                                                                       |
---------- | -------------------------------------- | ------------------------------------------------------------------------------|
pagination | Get the number of records you desire, increment numberOfPages for the next set| <code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;"pagination": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"number": 50,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"numberOfPages": 0<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</code> |

# Deals API

## Get deal by id

```shell
http  --follow --timeout 3600 GET 'https://access.beachfront.io/api/dealapi/get/713502143509' \
 Authorization:'Basic meowmeow'
```

```python
import requests

url = "https://access.beachfront.io/api/dealapi/get/713502143509"

payload = ""
headers = {
  'Authorization': 'Basic meowmeow'
}

response = requests.request("GET", url, headers=headers, data=payload)

print(response.text)
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/mediaplanapi/get/713502143509")
  .method("GET", null)
  .addHeader("Authorization", "Basic meowmeow")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
{
    "id": "60ad0dec92f8713502143516",
    "title": "Audigent & Beachfront - CTV Smart PMP - Multicultural 21-35",
    "adType": "DEAL",
    "type": "AUCTION",
    "rate": 6.0,
    "dealId": "AUD80",
    "seat": "1767832",
    "dealDspId": "5f3bd9305692bd0a56a6b36d",
    "createTime": null,
    "lastUpdate": null,
    "budgetType": "OPEN",
    "budget": null,
    "frequencyType": "UNLIMITED",
    "frequency": null,
    "deliveryType": "CONTINUE",
    "startDate": null,
    "endDate": null,
    "dealStatus": "PUBLISHED",
    "mediaCount": 0,
    "marginType": "PERCENTAGE",
    "marginValue": 30.0,
    "marginValueString": null,
    "mediaPlans": "60ad0b6e92f8713502143509",
    "selectedDsp": {
        "key": "5f3bd9305692bd0a56a6b36d",
        "name": "DV360",
        "avl": true,
        "dmaCode": null
    },
    "selectedPubDsp": null,
    "selectedMedia": {
        "key": "60ad0b6e92f8713502143509",
        "name": "Multi Culture Audience",
        "avl": false,
        "dmaCode": null
    },
    "audienceIp": "on",
    "audienceIfa": true,
    "location": "on",
    "zipcode": true,
    "contentNetwork": true,
    "contentSeries": true,
    "contentSeason": true,
    "contentEpisode": true,
    "contentTitle": true,
    "contentChannel": true,
    "pubSeats": []
}
```

This endpoint retrieves deal data.

<!--
<aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
-->

### HTTP Request

`GET https://access.beachfront.io/api/dealapi/get/713502143509`

### Query Parameters

Parameter |  Description
--------- | -----------
id | deal id

## Get all deals

```shell
printf '{
    "range": "today",
	  "startDate": "2021-06-14",
	  "endDate": "2021-06-14",
    "pagination": {
        "number": 50,
        "numberOfPages": 0
    }
}'| http  --follow --timeout 3600 POST 'https://access.beachfront.io/api/dealapi/all' \
 Authorization:'Basic meowmeow' \
 Content-Type:'application/json'
```

```python
import requests
import json

url = "https://access.beachfront.io/api/dealapi/all"

payload = json.dumps({
  "range": "today",
	"startDate": "2021-06-14",
	"endDate": "2021-06-14",
  "pagination": {
    "number": 50,
    "numberOfPages": 0
  }
})
headers = {
  'Authorization': 'Basic meowmeow',
  'Content-Type': 'application/json'
}

response = requests.request("POST", url, headers=headers, data=payload)

print(response.text)
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n    \"range\": \"today\",\n\t\"startDate\": \"2021-06-14\",\n\t\"endDate\": \"2021-06-14\",\n    \"pagination\": {\n        \"number\": 50,\n        \"numberOfPages\": 1\n    }\n}");
Request request = new Request.Builder()
  .url("https://access.beachfront.io/api/mediaplanapi/all")
  .method("POST", body)
  .addHeader("Authorization", "Basic meowmeow")
  .addHeader("Content-Type", "application/json")
  .build();
Response response = client.newCall(request).execute();
```

> The above command returns JSON structured like this:

```json
{
    "columns": [
        "Name",
        "Deal ID",
        "Status",
        "Auctions",
        "Rate",
        "Spend",
        "Revenue",
        "Last Updated",
        "Type",
        "Created",
        "DSP",
        "CPM",
        "Seat",
        "Pacing"
    ],
    "rows": [
        {
            "name": "Audigent > FiveFifty > SmartPMP CTV > Drive - Max Reach",
            "dealId": null,
            "status": "PUBLISHED",
            "auctions": 0,
            "rate": 6.0,
            "spend": 0.0,
            "revenue": 0.0,
            "updated": 1605282495896,
            "type": "AUCTION",
            "created": 1605282205506,
            "dsp": "The Trade Desk",
            "cpm": 0.0,
            "seat": null,
            "pacing": "DISABLED"
        },
        {
            "name": "Audigent & Beachfront - CTV Smart PMP - 2 Chainz - So Help Me God",
            "dealId": null,
            "status": "PUBLISHED",
            "auctions": 0,
            "rate": 5.0,
            "spend": 0.0,
            "revenue": 0.0,
            "updated": null,
            "type": "AUCTION",
            "created": 1605305017500,
            "dsp": "DV360",
            "cpm": 0.0,
            "seat": "1767832",
            "pacing": "DISABLED"
        }
    ]
}
```

This endpoint retrieves all your deals.

<!--
<aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
-->

### HTTP Request

`POST https://access.beachfront.io/api/dealapi/all`

### Body Parameters

Parameter  | Description                            | Example                                                                       |
---------- | -------------------------------------- | ------------------------------------------------------------------------------|
pagination | Get the number of records you desire, increment numberOfPages for the next set| <code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;"pagination": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"number": 50,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"numberOfPages": 0<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</code> |
range      | One of today, yesterday, last7day, last14day, last30day, month2date, lastmonth, custom, last15day. | month2date |
startDate  | Starting date | 2021-01-14
endDate    | Ending date | 2021-06-14
